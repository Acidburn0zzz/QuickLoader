/*
 * Copyright 2015 Alexander Martinz
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.0.4'

    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'

        classpath 'io.fabric.tools:gradle:1.21.5'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
}

def getGitCommitHash() {
    def gitFolder = "$projectDir/.git/"
    if (!new File(gitFolder + "HEAD").exists()) {
        return null
    }

    // how many characters we extract from the hash
    def takeFromHash = 6

    def head = new File(gitFolder + "HEAD").text.split(":")
    def isCommit = (head.length == 1)

    if (isCommit) {
        return head[0].trim().take(takeFromHash)
    }

    def refHead = new File(gitFolder + head[1].trim())
    return refHead.text.trim().take(takeFromHash)
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
